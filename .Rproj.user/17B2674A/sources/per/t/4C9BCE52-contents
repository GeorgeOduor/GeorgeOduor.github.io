reports_UI <- function(id) {
  ns <- NS(id)
  tagList(
  uiOutput(ns("reports"))
  )
}

reports <- function(input, output, session) {
  ns=session$ns

  # dynamic header
  output$heading = renderText({
    if (is.null(input$subject)) {
      " "
    }else{input$subject}
  })



  emailbody <- function() {
    load( paste0("files/limits_analysis_",format(Sys.Date()-1,'%d.%m.%Y'),".Rdata"))
    abovelimit = limits_analysis$limitscheck %>% filter(LimitsCheck == "Above Limit",as.Date(DisbursedOn) == max(as.Date(DisbursedOn)))
    duplicates =   limits_analysis$dups
    cummulativedisb = limits_analysis$disbreports$cummulative
    daydisb = limits_analysis$disbreports$day
    markers1 = grep("Sub-Total|Total",daydisb$Product)
    markers2 = grep("Sub-Total|Total",cummulativedisb$Product)

    HTML( paste0("<p>Please find attached Loan limits and multiple loans analysis.</p>
                  <h3><u><b>Insights</b></u></h3>",
                 "<h4>Loan limits.</h4>",
                 if (nrow(abovelimit) > 0) {
                   paste("<p>There ", ifelse(nrow(abovelimit)>1,
                                             paste(" were ",nrow(abovelimit),"disbursments above limit as at ",Sys.Date()-1,"</p><p><u></u></p>"),
                                             paste(" was ",nrow(abovelimit),"disbursment above limit as at ",Sys.Date()-1,"</p><p><u></u></p>" ))

                   )


                 }else{
                   paste("<p>There were no disbursments records above limit on ",Sys.Date()-1,"</p>")
                 },
                 "<h4>Duplicates</h4>",
                 if (sum(nrow(duplicates$duplicatesbyphone), nrow(duplicates$duplicatesbyID) , nrow(duplicates$duplicaesbyacc)) > 0) {
                   paste0("<p> There were a total of ",sum(nrow(duplicates$duplicatesbyID),
                                                           nrow(duplicates$duplicatesbyphone) ,
                                                           nrow(duplicates$duplicaesbyacc)), " duplicate disbursment records which are:</p>",
                          "<ul>",
                          ifelse(nrow(duplicates$duplicatesbyID)> 0,paste0("<li>Duplicates by IDs:" ,nrow(duplicates$duplicatesbyID),"</li>"),""),
                          ifelse(nrow(duplicates$duplicatesbyphone) > 0,paste0("<li>Duplicates by PhoneNumbers:",nrow(duplicates$duplicatesbyphone),"<li>"),""),
                          ifelse(nrow(duplicates$duplicaesbyacc) > 0,paste0("<li>Duplicates by Account IDs: ",nrow(duplicates$duplicaesbyacc),"<li>"),""),
                          "</ul>",kable(duplicates %>% bind_rows() %>% select(-c(AccountID,Counts),ClosedOn) %>% filter(!is.na(LoanAmount)) ) %>%
                            kable_styling(bootstrap_options = "striped", font_size = 12)


                   )
                 }else{
                   paste("<p>There were no duplicated disbursment records by National IDs,Phone Numbers or Account IDs</p>")
                 },
                 "<h4><b>Cumulative Disbursements as at ",Sys.Date()-1,"<h4></b>",
                 # pipelines()$cumulative %>% htmlTable::htmlTable(caption = " Cummulative Disbursements",total= T),
                 cummulativedisb %>%  kable() %>% kable_styling(font_size = 11) %>% collapse_rows(1) %>%
                   column_spec(column = 1:2,border_right = T,color = "black") %>%
                   row_spec(c(0,markers2),bold = T,underline = T,background = "lightgray",italic = T),
                 "<h4><b>Daily Disbursements for ",Sys.Date()-1,"<h4></b>",
                 # pipelines()$daily %>% htmlTable::htmlTable(caption = "Daily Disbursements",total= T),
                 daydisb %>% kable() %>% kable_styling(font_size = 11) %>% collapse_rows(1) %>%
                   column_spec(column = 1:2,border_right = T,color = "black") %>%
                   row_spec(c(0,markers1),bold = T,underline = T,background = "lightgray",italic = T)




    ))
  }

  observeEvent(input$compose,{
    output$emailbody <- renderUI({

        tryCatch(
          expr = {
            emailbody()
          },
          error = function(e) {
            message("df")
          },
          warning = function(w) {
            shinyalert(title = "Warning",text = "Sorry you must run the reports using the Limits tab first.",type = "warning",closeOnClickOutside = T)
          },
          finally = {
          }
        )
    })
  })

  observeEvent(input$pushmail,{
    to =
    cc = input$cc
    attachment = input$attachment
    maisha_email_push(to = input$to,cc = cc,Recipient = "",Subject = input$subject,
                      message = emailbody(),attachments = input$attachment$datapath,
                      Sender = "Wangari.",test = F)
    shinyalert(title = "Done",text = "Meesage sent Successfully.",type = "success",closeOnClickOutside = T)
  })


output$reports <- renderUI({
  tagList(column(width = 3,
                 panel(heading  = "Daily Reports",status = "success",
                       actionBttn(ns("compose"),"COMPOSE",icon = icon("plus"),style = "material-flat",color = "danger",size = "sm",block = T,no_outline = F),
                       prettyRadioButtons(ns("disblims"),"Select Report",choices = c("Disbursements & Limits"))
                 )),

          column(width = 9,
                 fluidRow(panel(heading = textOutput(ns("heading")),status = "success",
                                column(6,textInputIcon(ns("to"),"to",value = "management@maishabank.com",
                                                       icon = icon("user"),size = "sm"),
                                       textInputIcon(ns("subject"),"Subject",
                                                     value = paste0('Multiple loans& Loan limits analysis as at_',Sys.Date()),
                                                     icon = icon(""),size = "sm")),
                                column(6,textInputIcon(ns("cc"),"cc",value = NULL,icon = icon("users"),size = "sm"),
                                       fileInput(ns("attachment"),"Add Attachments",multiple = T,buttonLabel = icon("file"))),
                                column(10,wellPanel(id = "tPanel",style = "overflow-y:scroll; max-height: 270px",
                                                    uiOutput(ns("emailbody")))),
                                column(2,actionBttn(ns("pushmail"),"Send",icon = icon("send"),style = "material-flat",size = "sm",color = "danger"))
                 )),

          )
  )
})
}